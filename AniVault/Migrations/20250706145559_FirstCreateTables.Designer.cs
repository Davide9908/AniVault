// <auto-generated />
using System;
using AniVault.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AniVault.Migrations
{
    [DbContext(typeof(AniVaultDbContext))]
    [Migration("20250706145559_FirstCreateTables")]
    partial class FirstCreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AniVault.Database.AnimeEpisodesSetting", b =>
                {
                    b.Property<int>("MALAnimeId")
                        .HasColumnType("integer")
                        .HasColumnName("mal_anime_id");

                    b.Property<string>("AnimeFolderPath")
                        .HasColumnType("text")
                        .HasColumnName("anime_folder_path");

                    b.Property<short?>("CourEpisodeNumberGap")
                        .HasColumnType("smallint")
                        .HasColumnName("cour_episode_number_gap");

                    b.Property<bool>("DownloadLastEpisode")
                        .HasColumnType("boolean")
                        .HasColumnName("download_last_episode");

                    b.Property<string>("FileNameTemplate")
                        .HasColumnType("text")
                        .HasColumnName("file_name_template");

                    b.Property<int>("TelegramChannelId")
                        .HasColumnType("integer")
                        .HasColumnName("telegram_channel_id");

                    b.Property<bool>("UseGapForEpNum")
                        .HasColumnType("boolean")
                        .HasColumnName("use_gap_for_ep_num");

                    b.HasKey("MALAnimeId")
                        .HasName("pk_anime_episodes_setting");

                    b.HasIndex("TelegramChannelId")
                        .IsUnique()
                        .HasDatabaseName("ix_anime_episodes_setting_telegram_channel_id");

                    b.ToTable("AnimeEpisodesSetting");
                });

            modelBuilder.Entity("AniVault.Database.ScheduledTask", b =>
                {
                    b.Property<int>("ScheduledTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("scheduled_task_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ScheduledTaskId"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("enabled");

                    b.Property<int>("IntervalSeconds")
                        .HasColumnType("integer")
                        .HasColumnName("interval_seconds");

                    b.Property<DateTime>("LastFinish")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_finish");

                    b.Property<DateTime>("LastStart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_start");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("task_name");

                    b.HasKey("ScheduledTaskId")
                        .HasName("pk_scheduled_task");

                    b.ToTable("ScheduledTask");
                });

            modelBuilder.Entity("AniVault.Database.SystemConfigurationParameter", b =>
                {
                    b.Property<int>("ConfigurationParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("configuration_parameter_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConfigurationParameterId"));

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("parameter_name");

                    b.Property<int>("ParameterType")
                        .HasColumnType("integer")
                        .HasColumnName("parameter_type");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("parameter_value");

                    b.HasKey("ConfigurationParameterId")
                        .HasName("pk_system_configuration_parameters");

                    b.HasIndex("ParameterName")
                        .IsUnique()
                        .HasDatabaseName("ix_system_configuration_parameters_parameter_name");

                    b.ToTable("system_configuration_parameters", (string)null);
                });

            modelBuilder.Entity("AniVault.Database.TelegramChannel", b =>
                {
                    b.Property<int>("TelegramChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("telegram_channel_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TelegramChannelId"));

                    b.Property<long>("AccessHash")
                        .HasColumnType("bigint")
                        .HasColumnName("access_hash");

                    b.Property<bool>("AutoDownloadEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("auto_download_enabled");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("channel_name");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint")
                        .HasColumnName("chat_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("TelegramChannelId")
                        .HasName("pk_telegram_channel");

                    b.HasIndex("ChatId", "AccessHash")
                        .IsUnique()
                        .HasDatabaseName("ix_telegram_channel_chat_id_access_hash");

                    b.ToTable("TelegramChannel");
                });

            modelBuilder.Entity("AniVault.Database.TelegramMediaDocument", b =>
                {
                    b.Property<int>("TelegramMediaDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("telegram_media_document_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TelegramMediaDocumentId"));

                    b.Property<long>("AccessHash")
                        .HasColumnType("bigint")
                        .HasColumnName("access_hash");

                    b.Property<long>("DataTransmitted")
                        .HasColumnType("bigint")
                        .HasColumnName("data_transmitted");

                    b.Property<int>("DownloadStatus")
                        .HasColumnType("integer")
                        .HasColumnName("download_status");

                    b.Property<int?>("ErrorType")
                        .HasColumnType("integer")
                        .HasColumnName("error_type");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("file_id");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_update");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("size");

                    b.Property<int>("TelegramMessageId")
                        .HasColumnType("integer")
                        .HasColumnName("telegram_message_id");

                    b.HasKey("TelegramMediaDocumentId")
                        .HasName("pk_telegram_media_document");

                    b.HasIndex("TelegramMessageId")
                        .IsUnique()
                        .HasDatabaseName("ix_telegram_media_document_telegram_message_id");

                    b.HasIndex("FileId", "AccessHash")
                        .IsUnique()
                        .HasDatabaseName("ix_telegram_media_document_file_id_access_hash");

                    b.ToTable("TelegramMediaDocument");
                });

            modelBuilder.Entity("AniVault.Database.TelegramMessage", b =>
                {
                    b.Property<int>("TelegramMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("telegram_message_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TelegramMessageId"));

                    b.Property<int>("MessageId")
                        .HasColumnType("integer")
                        .HasColumnName("message_id");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message_text");

                    b.Property<int>("TelegramChannelId")
                        .HasColumnType("integer")
                        .HasColumnName("telegram_channel_id");

                    b.HasKey("TelegramMessageId")
                        .HasName("pk_telegram_message");

                    b.HasIndex("TelegramChannelId")
                        .HasDatabaseName("ix_telegram_message_telegram_channel_id");

                    b.ToTable("TelegramMessage");
                });

            modelBuilder.Entity("AniVault.Database.AnimeEpisodesSetting", b =>
                {
                    b.HasOne("AniVault.Database.TelegramChannel", "TelegramChannel")
                        .WithOne("AnimeEpisodesSetting")
                        .HasForeignKey("AniVault.Database.AnimeEpisodesSetting", "TelegramChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_anime_episodes_setting_telegram_channel_telegram_channel_id");

                    b.Navigation("TelegramChannel");
                });

            modelBuilder.Entity("AniVault.Database.TelegramMediaDocument", b =>
                {
                    b.HasOne("AniVault.Database.TelegramMessage", "TelegramMessage")
                        .WithOne("MediaDocuments")
                        .HasForeignKey("AniVault.Database.TelegramMediaDocument", "TelegramMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_telegram_media_document_telegram_message_telegram_message_id");

                    b.Navigation("TelegramMessage");
                });

            modelBuilder.Entity("AniVault.Database.TelegramMessage", b =>
                {
                    b.HasOne("AniVault.Database.TelegramChannel", "TelegramChannel")
                        .WithMany("TelegramMessages")
                        .HasForeignKey("TelegramChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_telegram_message_telegram_channel_telegram_channel_id");

                    b.Navigation("TelegramChannel");
                });

            modelBuilder.Entity("AniVault.Database.TelegramChannel", b =>
                {
                    b.Navigation("AnimeEpisodesSetting");

                    b.Navigation("TelegramMessages");
                });

            modelBuilder.Entity("AniVault.Database.TelegramMessage", b =>
                {
                    b.Navigation("MediaDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
